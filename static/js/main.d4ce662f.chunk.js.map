{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","setCurrentSong","songs","setSongs","isPlaying","setIsPlaying","songInfo","setSongInfo","audioRef","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","skipTrack","direction","a","currentSongIndex","findIndex","song","id","length","activeLibraryHandler","current","play","nextPrev","newSongs","map","active","currentTime","style","background","color","type","onChange","e","target","value","min","max","duration","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","LibrarySong","selectSongHandler","s","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useState","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ce662f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt=\"song-cover\" />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleRight,\r\n  faAngleLeft,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  songs,\r\n  setSongs,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songInfo,\r\n  setSongInfo,\r\n  audioRef,\r\n}) => {\r\n  //function\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  const skipTrack = async (direction) => {\r\n    let currentSongIndex = songs.findIndex(\r\n      (song) => currentSong.id === song.id\r\n    );\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentSongIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentSongIndex + 1) % songs.length]);\r\n    } else if (direction === \"skip-back\") {\r\n      if (currentSongIndex - 1 === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n      } else {\r\n        await setCurrentSong(songs[currentSongIndex - 1]);\r\n        activeLibraryHandler(songs[currentSongIndex - 1]);\r\n      }\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  //Event Handelr\r\n  const playMusicHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-controls\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            onChange={dragHandler}\r\n            min=\"0\"\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-controls\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrack(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playMusicHandler}\r\n          className=\"play\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrack(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setSongs,\r\n  currentSong,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n}) => {\r\n  const selectSongHandler = async () => {\r\n    await setCurrentSong(song);\r\n    const newSongs = songs.map((s) => {\r\n      if (s.id === song.id) {\r\n        return { ...s, active: true };\r\n      } else {\r\n        return { ...s, active: false };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      onClick={selectSongHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={`${song.name} cover`} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\n\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setSongs,\r\n  currentSong,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            setSongs={setSongs}\r\n            currentSong={currentSong}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            key={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\n//Adding Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Data\nimport chillHop from \"./data\";\n// import { library } from \"@fortawesome/fontawesome-svg-core\";\n\nfunction App() {\n  const [songs, setSongs] = useState(chillHop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  //Ref\n  const audioRef = useRef(null);\n  //Event Handler\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentSongIndex = songs.findIndex(\n      (song) => currentSong.id === song.id\n    );\n    await setCurrentSong(songs[(currentSongIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n    const newSongs = songs.map((s) => {\n      if (s.id === songs[(currentSongIndex + 1) % songs.length].id) {\n        return { ...s, active: true };\n      } else {\n        return { ...s, active: false };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n      />\n      <Library\n        songs={songs}\n        setSongs={setSongs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}